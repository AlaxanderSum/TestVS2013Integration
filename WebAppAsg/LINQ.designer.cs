#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppAsg
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebDB")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertTaxi(Taxi instance);
    partial void UpdateTaxi(Taxi instance);
    partial void DeleteTaxi(Taxi instance);
    partial void InsertDriver(Driver instance);
    partial void UpdateDriver(Driver instance);
    partial void DeleteDriver(Driver instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Taxi> Taxis
		{
			get
			{
				return this.GetTable<Taxi>();
			}
		}
		
		public System.Data.Linq.Table<Driver> Drivers
		{
			get
			{
				return this.GetTable<Driver>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _Name;
		
		private string _Address;
		
		private string _PostCode;
		
		private string _State;
		
		private string _Gender;
		
		private string _HomePhoneNo;
		
		private string _MobilePhoneNo;
		
		private string _EmailAddress;
		
		private string _IcNumber;
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHomePhoneNoChanging(string value);
    partial void OnHomePhoneNoChanged();
    partial void OnMobilePhoneNoChanging(string value);
    partial void OnMobilePhoneNoChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnIcNumberChanging(string value);
    partial void OnIcNumberChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(80)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(50)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhoneNo", DbType="VarChar(50)")]
		public string HomePhoneNo
		{
			get
			{
				return this._HomePhoneNo;
			}
			set
			{
				if ((this._HomePhoneNo != value))
				{
					this.OnHomePhoneNoChanging(value);
					this.SendPropertyChanging();
					this._HomePhoneNo = value;
					this.SendPropertyChanged("HomePhoneNo");
					this.OnHomePhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhoneNo", DbType="VarChar(50)")]
		public string MobilePhoneNo
		{
			get
			{
				return this._MobilePhoneNo;
			}
			set
			{
				if ((this._MobilePhoneNo != value))
				{
					this.OnMobilePhoneNoChanging(value);
					this.SendPropertyChanging();
					this._MobilePhoneNo = value;
					this.SendPropertyChanged("MobilePhoneNo");
					this.OnMobilePhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcNumber", DbType="VarChar(50)")]
		public string IcNumber
		{
			get
			{
				return this._IcNumber;
			}
			set
			{
				if ((this._IcNumber != value))
				{
					this.OnIcNumberChanging(value);
					this.SendPropertyChanging();
					this._IcNumber = value;
					this.SendPropertyChanged("IcNumber");
					this.OnIcNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxi")]
	public partial class Taxi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaxiPlateNo;
		
		private string _VehicleType;
		
		private System.Nullable<decimal> _Fare;
		
		private string _Availability;
		
		private string _VehicleManufacturer;
		
		private string _VehicleModel;
		
		private string _VehicleColour;
		
		private string _DriverID;
		
		private EntityRef<Driver> _Driver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaxiPlateNoChanging(string value);
    partial void OnTaxiPlateNoChanged();
    partial void OnVehicleTypeChanging(string value);
    partial void OnVehicleTypeChanged();
    partial void OnFareChanging(System.Nullable<decimal> value);
    partial void OnFareChanged();
    partial void OnAvailabilityChanging(string value);
    partial void OnAvailabilityChanged();
    partial void OnVehicleManufacturerChanging(string value);
    partial void OnVehicleManufacturerChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnVehicleColourChanging(string value);
    partial void OnVehicleColourChanged();
    partial void OnDriverIDChanging(string value);
    partial void OnDriverIDChanged();
    #endregion
		
		public Taxi()
		{
			this._Driver = default(EntityRef<Driver>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiPlateNo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaxiPlateNo
		{
			get
			{
				return this._TaxiPlateNo;
			}
			set
			{
				if ((this._TaxiPlateNo != value))
				{
					this.OnTaxiPlateNoChanging(value);
					this.SendPropertyChanging();
					this._TaxiPlateNo = value;
					this.SendPropertyChanged("TaxiPlateNo");
					this.OnTaxiPlateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleType", DbType="VarChar(20)")]
		public string VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fare", DbType="Money")]
		public System.Nullable<decimal> Fare
		{
			get
			{
				return this._Fare;
			}
			set
			{
				if ((this._Fare != value))
				{
					this.OnFareChanging(value);
					this.SendPropertyChanging();
					this._Fare = value;
					this.SendPropertyChanged("Fare");
					this.OnFareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="VarChar(50)")]
		public string Availability
		{
			get
			{
				return this._Availability;
			}
			set
			{
				if ((this._Availability != value))
				{
					this.OnAvailabilityChanging(value);
					this.SendPropertyChanging();
					this._Availability = value;
					this.SendPropertyChanged("Availability");
					this.OnAvailabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleManufacturer", DbType="VarChar(50)")]
		public string VehicleManufacturer
		{
			get
			{
				return this._VehicleManufacturer;
			}
			set
			{
				if ((this._VehicleManufacturer != value))
				{
					this.OnVehicleManufacturerChanging(value);
					this.SendPropertyChanging();
					this._VehicleManufacturer = value;
					this.SendPropertyChanged("VehicleManufacturer");
					this.OnVehicleManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleModel", DbType="VarChar(50)")]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleColour", DbType="VarChar(50)")]
		public string VehicleColour
		{
			get
			{
				return this._VehicleColour;
			}
			set
			{
				if ((this._VehicleColour != value))
				{
					this.OnVehicleColourChanging(value);
					this.SendPropertyChanging();
					this._VehicleColour = value;
					this.SendPropertyChanged("VehicleColour");
					this.OnVehicleColourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="VarChar(20)")]
		public string DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					if (this._Driver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Driver_Taxi", Storage="_Driver", ThisKey="DriverID", OtherKey="DriverID", IsForeignKey=true)]
		public Driver Driver
		{
			get
			{
				return this._Driver.Entity;
			}
			set
			{
				Driver previousValue = this._Driver.Entity;
				if (((previousValue != value) 
							|| (this._Driver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Driver.Entity = null;
						previousValue.Taxis.Remove(this);
					}
					this._Driver.Entity = value;
					if ((value != null))
					{
						value.Taxis.Add(this);
						this._DriverID = value.DriverID;
					}
					else
					{
						this._DriverID = default(string);
					}
					this.SendPropertyChanged("Driver");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Driver")]
	public partial class Driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DriverID;
		
		private string _Name;
		
		private string _ICNo;
		
		private string _TaxiCompany;
		
		private System.Nullable<System.DateTime> _DrivingLicenseExpiryDate;
		
		private string _ContactNo;
		
		private string _Address;
		
		private string _DriverStatus;
		
		private string _Gender;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<Taxi> _Taxis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDriverIDChanging(string value);
    partial void OnDriverIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnICNoChanging(string value);
    partial void OnICNoChanged();
    partial void OnTaxiCompanyChanging(string value);
    partial void OnTaxiCompanyChanged();
    partial void OnDrivingLicenseExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDrivingLicenseExpiryDateChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDriverStatusChanging(string value);
    partial void OnDriverStatusChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Driver()
		{
			this._Taxis = new EntitySet<Taxi>(new Action<Taxi>(this.attach_Taxis), new Action<Taxi>(this.detach_Taxis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICNo", DbType="VarChar(50)")]
		public string ICNo
		{
			get
			{
				return this._ICNo;
			}
			set
			{
				if ((this._ICNo != value))
				{
					this.OnICNoChanging(value);
					this.SendPropertyChanging();
					this._ICNo = value;
					this.SendPropertyChanged("ICNo");
					this.OnICNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxiCompany", DbType="VarChar(50)")]
		public string TaxiCompany
		{
			get
			{
				return this._TaxiCompany;
			}
			set
			{
				if ((this._TaxiCompany != value))
				{
					this.OnTaxiCompanyChanging(value);
					this.SendPropertyChanging();
					this._TaxiCompany = value;
					this.SendPropertyChanged("TaxiCompany");
					this.OnTaxiCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrivingLicenseExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> DrivingLicenseExpiryDate
		{
			get
			{
				return this._DrivingLicenseExpiryDate;
			}
			set
			{
				if ((this._DrivingLicenseExpiryDate != value))
				{
					this.OnDrivingLicenseExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._DrivingLicenseExpiryDate = value;
					this.SendPropertyChanged("DrivingLicenseExpiryDate");
					this.OnDrivingLicenseExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(80)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverStatus", DbType="VarChar(50)")]
		public string DriverStatus
		{
			get
			{
				return this._DriverStatus;
			}
			set
			{
				if ((this._DriverStatus != value))
				{
					this.OnDriverStatusChanging(value);
					this.SendPropertyChanging();
					this._DriverStatus = value;
					this.SendPropertyChanged("DriverStatus");
					this.OnDriverStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Driver_Taxi", Storage="_Taxis", ThisKey="DriverID", OtherKey="DriverID")]
		public EntitySet<Taxi> Taxis
		{
			get
			{
				return this._Taxis;
			}
			set
			{
				this._Taxis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxis(Taxi entity)
		{
			this.SendPropertyChanging();
			entity.Driver = this;
		}
		
		private void detach_Taxis(Taxi entity)
		{
			this.SendPropertyChanging();
			entity.Driver = null;
		}
	}
}
#pragma warning restore 1591
